/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AModExpr1 extends PExpr1
{
    private PExpr2 _expr2_;
    private TMod _mod_;
    private PExpr1 _expr1_;

    public AModExpr1()
    {
        // Constructor
    }

    public AModExpr1(
        @SuppressWarnings("hiding") PExpr2 _expr2_,
        @SuppressWarnings("hiding") TMod _mod_,
        @SuppressWarnings("hiding") PExpr1 _expr1_)
    {
        // Constructor
        setExpr2(_expr2_);

        setMod(_mod_);

        setExpr1(_expr1_);

    }

    @Override
    public Object clone()
    {
        return new AModExpr1(
            cloneNode(this._expr2_),
            cloneNode(this._mod_),
            cloneNode(this._expr1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModExpr1(this);
    }

    public PExpr2 getExpr2()
    {
        return this._expr2_;
    }

    public void setExpr2(PExpr2 node)
    {
        if(this._expr2_ != null)
        {
            this._expr2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr2_ = node;
    }

    public TMod getMod()
    {
        return this._mod_;
    }

    public void setMod(TMod node)
    {
        if(this._mod_ != null)
        {
            this._mod_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mod_ = node;
    }

    public PExpr1 getExpr1()
    {
        return this._expr1_;
    }

    public void setExpr1(PExpr1 node)
    {
        if(this._expr1_ != null)
        {
            this._expr1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expr2_)
            + toString(this._mod_)
            + toString(this._expr1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expr2_ == child)
        {
            this._expr2_ = null;
            return;
        }

        if(this._mod_ == child)
        {
            this._mod_ = null;
            return;
        }

        if(this._expr1_ == child)
        {
            this._expr1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expr2_ == oldChild)
        {
            setExpr2((PExpr2) newChild);
            return;
        }

        if(this._mod_ == oldChild)
        {
            setMod((TMod) newChild);
            return;
        }

        if(this._expr1_ == oldChild)
        {
            setExpr1((PExpr1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
